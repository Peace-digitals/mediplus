name: CI - Build and Push Docker Image to ECR


on:
  push:


jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4


      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}


      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 016099143485.dkr.ecr.us-east-1.amazonaws.com


      - name: Build and push Docker image to ECR
        run: |
          docker build -t medplus:${{ github.run_number }} .
          docker tag medplus:${{ github.run_number }} 016099143485.dkr.ecr.us-east-1.amazonaws.com/medplus:${{ github.run_number }}
          docker push 016099143485.dkr.ecr.us-east-1.amazonaws.com/medplus:${{ github.run_number }}


  deploy:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: Check my SSH key
        run: |
          echo "${{ secrets.SSH_KEY }}" > ifuu.pem
          chmod 600 ifuu.pem
          cat ifuu.pem


          # Pull latest Docker image from ECR
          ssh -o StrictHostKeyChecking=no -i ifuu.pem ${{ secrets.USERNAME }}@${{ secrets.SERVER_IP }} \
          "docker pull 016099143485.dkr.ecr.us-east-1.amazonaws.com/medplus:${{ github.run_number }}"


          # Stop and remove old container (optional)
          ssh -o StrictHostKeyChecking=no -i ifuu.pem ${{ secrets.USERNAME }}@${{ secrets.SERVER_IP }} \
          "docker rm -f medplus || true"


          # Run new container
          ssh -o StrictHostKeyChecking=no -i ifuu.pem ${{ secrets.USERNAME }}@${{ secrets.SERVER_IP }} \
          "docker run -d --name medplus -p 80:80 016099143485.dkr.ecr.us-east-1.amazonaws.com/medplus:${{ github.run_number }}"


      - name: Notify Slack of successful deployment
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"‚úÖ Deployment successful for *Medplus* (Run #${{ github.run_number }})! üöÄ\"}" \
          ${{ secrets.SLACK_WEBHOOK_URL }}


      - name: Notify Slack if deployment fails
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data "{\"text\":\"‚ùå Deployment failed for *Medplus* (Run #${{ github.run_number }})! Please check logs.\"}" \
          ${{ secrets.S }}
